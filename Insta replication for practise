Schema defined:
User table: id, username, created_at
PHOTOS: id,user_id,image_url,created_at
Comments: id,comment_text,user_id,photo_id,created_at
Likes: user_id,photo_id,created_at
Follow: follower_id, Followee_id, created_at --two primary keys in this case order of data entering matters

create database ig_clone;
use ig_clone;
use instagram_rep;
create table users (id int auto_increment primary key, username varchar(255) unique not null,created_at timestamp default now());
create table photo
(user_id int not null , 
id int auto_increment primary key, image_url varchar(255) not null,created_at timestamp default now(), foreign key(user_id) references users(id));
create table comments
(id int auto_increment primary key, 
comment_text varchar(255) not null,
user_id int not null, 
photo_id int not null, 
created_at timestamp default now(), foreign key(photo_id) references photo(id), foreign key(user_id)references users(id));
show tables;
drop table photo_tag;
desc comments;
desc photo;
desc follow;	
desc photo_tag;
create table likes
(user_id int, photo_id int,created_at timestamp default now(),
 foreign key(user_id ) references users(id), foreign key (photo_id) references photo(id) );
 create table follow
 (follower_id int , followee_id int ,created_at timestamp default now(),
 foreign key(follower_id) references users(id), 
 foreign key(followee_id) references users(id), primary key(follower_id,followee_id) );
 create table photo_tag(photo_id int not null, tag_id int not null, foreign key (photo_id) references photo(id), foreign key (tag_id) references tags(id));
 create table tags(id int not null, tag_name varchar(255))
 
 
